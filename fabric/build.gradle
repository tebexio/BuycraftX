plugins {
    id 'fabric-loom'
    id 'java'
}

apply plugin: 'java'


archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenLocal()
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots/')
    }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation("me.lucko:fabric-permissions-api:0.2-SNAPSHOT")

    shadow project(":plugin-shared")
}

def targetJavaVersion = 8
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

configurations {
    shadow
    implementation.extendsFrom shadow
}

shadowJar {
    minimize()
    from sourceSets.main.output
    configurations = [project.configurations.shadow]
    archiveName = 'buycraftx-fabric-all.jar'
    destinationDir = file('build/devlibs')

    relocate 'net.buycraft.plugin', 'net.buycraft.plugin'
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation
task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "net.buycraft.plugin.fabric.libs"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

shadowJar.finalizedBy remapJar

remapJar {
    input = tasks.shadowJar.archiveFile
    archiveName = 'buycraftx-fabric.jar'
}